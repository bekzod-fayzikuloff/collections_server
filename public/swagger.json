{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "UserCreateAccessToken": {
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": ["accessToken"],
        "type": "object"
      },
      "Pick_UserCreateResponse.Exclude_keyofUserCreateResponse.id-or-isAdmin__": {
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["username", "email", "password"],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "Omit_UserCreateResponse.id-or-isAdmin_": {
        "$ref": "#/components/schemas/Pick_UserCreateResponse.Exclude_keyofUserCreateResponse.id-or-isAdmin__",
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "UserCreateRequest": {
        "$ref": "#/components/schemas/Omit_UserCreateResponse.id-or-isAdmin_"
      },
      "Pick_UserCreateResponse.Exclude_keyofUserCreateResponse.password__": {
        "properties": {
          "id": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": ["id", "username", "email"],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "Omit_UserCreateResponse.password_": {
        "$ref": "#/components/schemas/Pick_UserCreateResponse.Exclude_keyofUserCreateResponse.password__",
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "UserDetail": {
        "$ref": "#/components/schemas/Omit_UserCreateResponse.password_"
      },
      "Partial_Omit_UserCreateResponse.id-or-password__": {
        "properties": {
          "isAdmin": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "type": "object",
        "description": "Make all properties in T optional"
      },
      "UserUpdateRequest": {
        "$ref": "#/components/schemas/Partial_Omit_UserCreateResponse.id-or-password__"
      },
      "NoContent": {
        "properties": {
          "delete": {
            "type": "string"
          }
        },
        "required": ["delete"],
        "type": "object"
      },
      "Pick_UserCreateResponse.Exclude_keyofUserCreateResponse.id-or-username-or-createdAt-or-updatedAt-or-isAdmin__": {
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "Omit_UserCreateResponse.id-or-username-or-createdAt-or-updatedAt-or-isAdmin_": {
        "$ref": "#/components/schemas/Pick_UserCreateResponse.Exclude_keyofUserCreateResponse.id-or-username-or-createdAt-or-updatedAt-or-isAdmin__",
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "UserLoginRequest": {
        "$ref": "#/components/schemas/Omit_UserCreateResponse.id-or-username-or-createdAt-or-updatedAt-or-isAdmin_"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "title": "collections_server",
    "version": "1.0.0",
    "license": {
      "name": "MIT"
    },
    "contact": {
      "name": "fayzikuloff.b@gmail.com"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/users": {
      "post": {
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserCreateAccessToken"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "tags": ["users"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetAll",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/UserDetail"
                      },
                      "type": "array"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "tags": ["users"],
        "security": [],
        "parameters": []
      }
    },
    "/api/users/{userId}": {
      "get": {
        "operationId": "GetOne",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserDetail"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "tags": ["users"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserDetail"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "tags": ["users"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/NoContent"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "tags": ["users"],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/users/login": {
      "post": {
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserDetail"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "tags": ["users"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ]
}
